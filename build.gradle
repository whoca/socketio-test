apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin : 'maven'

group = 'com.xtayfjpk.netty.test'
version = '1.0.0-SNAPSHOT'

targetCompatibility = '1.7'
sourceCompatibility = '1.7'

if(System.getenv("USERNAME") == "zjin") {
	System.setProperty("http.proxyHost", "179.179.179.243")
	System.setProperty("http.proxyPort", "9847")
	System.setProperty("http.proxyUser", "")
	System.setProperty("http.proxyPassword", "")
	System.setProperty("http.nonProxyHosts", "localhost")
	
	System.setProperty("https.proxyHost", "179.179.179.243")
	System.setProperty("https.proxyPort", "9847")
	System.setProperty("https.proxyUser", "")
	System.setProperty("https.proxyPassword", "")
	System.setProperty("https.nonProxyHosts", "localhost")
}

tasks.withType(JavaCompile) { 
    	options.encoding = "UTF-8" 
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
}

repositories {
	maven {
		url "http://maven.aliyun.com/nexus/content/groups/public/"
	}
}

javadoc {
	options.encoding = "UTF-8"
}

eclipse {
	classpath { 
		downloadSources=true 
		downloadJavadoc = false
	}
}



uploadArchives {
	repositories {
		mavenDeployer {
			repository(url:'http://127.0.0.1:8081/artifactory/libs-snapshot-local') {
				authentication(userName: "admin", password: "password")
			}

		pom.project {
			description 'google guice test'
		}

		pom.withXml { XmlProvider xmlProvider ->
			def xml = xmlProvider.asString()
			def pomXml = new XmlParser().parse(new ByteArrayInputStream(xml.toString().bytes))
			def newXml = new StringWriter()
			def printer = new XmlNodePrinter(new PrintWriter(newXml))
			printer.preserveWhitespace = true
			printer.print(pomXml)
			xml.setLength(0)
			xml.append(newXml.toString())
		}
        }
    }
}



dependencies {
	compile 'junit:junit:4.11'
	compile 'com.corundumstudio.socketio:netty-socketio:1.7.11'
	compile 'org.slf4j:slf4j-simple:1.7.7'
	
	//compile "com.yongboy:socketio-netty:1.0"
	//compile 'io.netty:netty:3.9.0.Final'
	//compile 'log4j:log4j:1.2.17'
}